/*
 * ASL specification of the Invoice Management System (IMS)
 */

Package ims

/********************************************************
    System definition 
*********************************************************/

System IMS "Invoice Management System" : Application : Application_Web [
	description 
	"
	Invoice Management System is a system that allows users to manage customers, products and invoices. 
	A user of the system is someone that has a user account and is assigned to user roles, such as operator, manager and administrator.
	
	User-administrator shall be responsible for managing users, configuring technical features (e.g., user roles, export configuration parameters, 
	general enterprise information). System shall allow user-administrator to register users. During this process the administrator shall specify 
	first and last name of the user, email address, and username. User password shall be automatically generated by the system and sent to its user email.
	
	User-operator is responsible for managing customers and invoices. User-operator shall create/update information related to customers and invoices. 
	For each customer the system shall maintain the following information: name, fiscal id, logo image, address, bank information and additional information 
	such as basic person contact information. System shall allow user-operator to define some customers as VIP. If a customer is defined as VIP, for each of her invoice, 
	the system shall allow user-operator to set a predefined discount tax. That amount of discount can change throughout the time and depends on 
	the current policy of the company. For each product the system shall maintain the following information: name, description, price, VAT category, and VAT value. 
	Product must have only one VAT category and maintain the respective current VAT value.
	
	User-operator shall create new invoices (with respective invoice details). However, before sending an invoice to a customer, the invoice shall be formally approved 
	by the user-manager. Only after such approval, the user-operator shall issue and send that invoice electronically by e-mail and by regular post. In addition, 
	for each invoice, the user-operator needs to keep track if it is paid or not. 
	
	The System shall automatically alert the user-manager, for all the invoices that were sent to customers but not yet paid, after 30 days of their respective issue date.  
	In the beginning of each year the System shall archive and send to the ERP-System all paid invoices of the last year. [...]
	"
]

/********************************************************
    DataEntities view
*********************************************************/

DataEnumeration SizeKind values ( 
	S "Small", 
	R "Regular", 
	L "Large", 
	XL "ExtraLarge"
)
DataEnumeration UserRoleKind values ( 
	A "Admin", 
	M "Manager", 
	O "Operator", 
	C "Customer"
)  
DataEnumeration InvoiceStatusKind values ( 
	P "Pending", 
	A "Approved", 
	R "Rejected", 
	I "Issued", 
	P "Paid", 
	D "Deleted"
)   
DataEnumeration VATRateKind values ( 
	ST "Standard", 
	R "Reduced", 
	SP "Special"
)   

DataEntity e_VAT "VAT Category" : Reference [
    attribute Code "Code" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute Rate "Rate" : DataEnumeration VATRateKind [constraints (NotNull)]
    attribute Name "Name" : String(30)
    attribute Value "Value" : Decimal(2.1) [constraints (NotNull)] 
    
    constraints ( showAs(Name) )
    description "VAT Categories"
]

DataEntity e_Product "Product" : Master [
    attribute ID "Product ID" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute VATCode "VAT code" : Integer [ constraints (NotNull ForeignKey(e_VAT)) ]
    attribute VATValue "VAT value" : Decimal [ constraints (Derived (e_VAT.Value)) ]
    attribute ProductName "Name" : String(100)
    attribute ValueWithoutVAT "Value Without VAT" : Decimal(16.2) [constraints (NotNull)]
    attribute ValueWithVAT "Value With VAT" : Decimal(16.2) [ formula arithmetic (ValueWithoutVAT * (1 + VATValue)) constraints (NotNull) ]
    attribute Size : DataEnumeration SizeKind
    
    constraints ( showAs(ProductName) )
    description "Products"
]

DataEntity e_Customer "Customer" : Master [
    attribute ID "Customer ID" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute Name "Name" : String(50) [constraints (NotNull)]
    attribute FiscalID "Fiscal ID" : String(12) [helpMessage "Customer's Fiscal Id" constraints (NotNull Unique) ]
    attribute Phone "Phone #" : String(12) [constraints (NotNull)]
    attribute LogoImage "Logo image" : Image
    attribute Address "Address" : String(200)
    attribute IBAN "IBAN" : String(34)
    attribute SWIFT "SWIFT" : String(8)
    
    constraints ( showAs(Name) )
    description "Customers"
]

DataEntity e_CustomerVIP "CustomerVIP" : Master [
	isA e_Customer
    attribute ID "CustomerVIP ID" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute CustomerID "Customer ID" : Integer [ constraints (NotNull ForeignKey(e_Customer)) ]
    attribute DiscountRate "Discount Rate" : Decimal [defaultValue "20%" ]
    
    description "Customers VIP"
]

DataEntity e_Invoice "Invoice" : Document : Regular [
    attribute ID "Invoice ID" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute CustomerID "Customer ID" : Integer [ constraints (NotNull ForeignKey(e_Customer onDelete PROTECT)) ]
    attribute CreationDate "Creation Date" : Date [defaultValue "today" constraints (NotNull)]
    attribute ApprovalDate "Approval Date" : Date
    attribute IssueDate "Issue Date" : Date 
    attribute PaidDate "Payment Date" : Date
    attribute Status : DataEnumeration InvoiceStatusKind
    attribute TotalValueWithoutVAT "Total Value Without VAT" : Decimal(16.2) [ formula details : sum (e_InvoiceLine.ValueWithoutVAT) constraints (NotNull) ]
    attribute TotalValueWithVAT "Total Value With VAT" : Decimal(16.2) [ formula details : sum (e_InvoiceLine.ValueWithVAT) constraints (NotNull) ]
    attribute TotalInvoiceLines "Total invoice lines" : Integer [ formula details : count (e_InvoiceLine) ]
    
    constraints ( showAs(ID) )
    description "Invoices"
]

DataEntity e_InvoiceLine "Invoice Line" : Document : Weak [
    attribute ID "InvoiceLine ID" : Integer [constraints (PrimaryKey NotNull Unique)]
    attribute InvoiceID "Invoice ID" : Integer [constraints (NotNull ForeignKey(e_Invoice onDelete CASCADE))]
    attribute ProductID "Product ID" : Integer [constraints (NotNull ForeignKey(e_Product onDelete PROTECT))]
    attribute Order "InvoiceLine Order" : Integer [constraints (NotNull)]
    attribute Quantity "Number of Itens" : Integer
    attribute ProductVAT : Decimal [constraints (Derived (e_Product.VATValue))]
  	attribute ProductPrice : Decimal [constraints (Derived (e_Product.ValueWithoutVAT))]
    attribute ValueWithoutVAT "Value Without VAT" : Decimal [ formula arithmetic (Quantity * ProductPrice) ]
    attribute ValueWithVAT "Value With VAT" : Decimal [ formula arithmetic (ValueWithoutVAT * (1 + ProductVAT)) ]
    
    constraints ( showAs(Order) )
    description "Invoice Lines"
]

DataEntity e_ClosedInvoice "ClosedInvoice" : Transaction [
	attribute ID "Invoice ID" : Integer [constraints (PrimaryKey)]
	attribute CustomerID "Customer ID" : Integer [constraints (NotNull ForeignKey (e_Customer onDelete PROTECT))]
	attribute CreationDate "Creation Date" : Date [defaultValue "today" constraints (NotNull)]
	attribute ApprovalDate "Approval Date" : Date
	attribute PaidDate "Payment Date" : Date
	attribute DeletedDate "Delete Date" : Date
	attribute TotalValueWithoutVAT "Total Value Without VAT" : Decimal(16.2) [constraints (NotNull)]
	attribute TotalValueWithVAT "Total Value With VAT" : Decimal(16.2) [constraints (NotNull) ]
	
	constraints ( showAs(ID) )
	description "Closed Invoices, for Backup"
]

DataEntity e_User "User" : Master [
	attribute ID "ID" : Integer [constraints (PrimaryKey)]
	attribute Login "Login" : Regex [constraints (NotNull Unique)]
	attribute Password "Password" : Regex [constraints (NotNull Encrypted)]
	attribute FirstName "First Name" : String [constraints (NotNull Encrypted)]
	attribute LastName "Last Name" : String [constraints (NotNull Encrypted)]
	attribute UserEmail "Email" : Email [constraints (Unique Encrypted)]
	attribute IsActive "IsActive" : Boolean
	attribute UserRole "User Role" : DataEnumeration UserRoleKind
	
	constraints ( showAs(FirstName) )
	description "Users"
]

/********************************************************
    DataEntityCluster view
*********************************************************/

DataEntityCluster ec_User "Users" : Master [main e_User]
DataEntityCluster ec_Customer "Customers" : Master [main e_Customer description "ec_Customer" ]
DataEntityCluster ec_Product "Products" : Master [main e_Product uses e_VAT]
DataEntityCluster ec_Invoice "Invoices" : Document  [ main e_Invoice child e_InvoiceLine [uses e_Product, e_VAT] uses e_Customer]
DataEntityCluster ec_Invoice_Simple "Invoices (Simple)" : Document [main e_Invoice uses e_Customer]

/********************************************************
    Actors
*********************************************************/

Actor a_TechnicalAdmin "Technical Admin" : User [ description "Admin manage Users, VAT, etc." ]
Actor a_Operator "Operator" : User [ description "Operator manages Invoices and Customers" ]
Actor a_Manager "Manager" : User [ description "Manager approves Invoices, etc." ]
Actor a_Customer "Customer" : User [ description "Customer receives Invoices to pay" ]
Actor a_ERP "ERP" : ExternalSystem [description "Receive info of paid invoices"] 

/********************************************************
    Use Cases
*********************************************************/

ActionType aSend_Invoice [description "Send Invoice to Customer via email"]
ActionType aExport_Invoices [description "Export a selected set of Invoices to a previously defined format, e.g. xlsx, json, rtf."]
ActionType aPrint_Invoice [description "Print an Invoice according a previously defined template"]
ActionType aPrint_Invoices [description "Print a selected list of Invoices according a previously defined template"]
ActionType aConfirmPayment [description "Confirm the Invoice's payment"]
ActionType aApprove [description "Approve Invoice"]
ActionType aReject [description "Do not Approve Invoice"]
ActionType aPrint_Customer [description "Print Customer Profile"]
ActionType aArchiveAndExportInvoices [description "Archive and Export Paid Invoices"]

UseCase uc_1_ManageInvoices "Manage Invoices" : EntitiesManage [
	actorInitiates a_Operator
	dataEntity e_Invoice
	actions aCreate, aRead, aUpdate, aDelete
	extensionPoints xp_ConfirmPayment, xp_SendInvoices, xp_PrintInvoice
]

UseCase uc_1_1_SendInvoices "Send Invoices" : EntitiesInteropSendMessage [
	actorInitiates a_Operator
	actorParticipates a_Customer
	dataEntity ec_Invoice
	actions aSend_Invoice
	includes uc_1_2_PrintInvoice
	extends uc_1_ManageInvoices onExtensionPoint uc_1_ManageInvoices.xp_SendInvoices
]

UseCase uc_1_2_PrintInvoice "Print Invoice" : EntityReport [
	actorInitiates a_Operator
	dataEntity ec_Invoice
	precondition "Invoice.state in {'Approved', 'Issued', 'Paid'}"
	actions aPrint_Invoice
	extends uc_1_ManageInvoices onExtensionPoint uc_1_ManageInvoices.xp_PrintInvoice
	description "Print Invoice/Receipt"
]

UseCase uc_1_5_RegisterPayment "Register Payment" : EntityUpdate [
	actorInitiates a_Operator
	dataEntity ec_Invoice
	precondition "Invoice.state in {'Issued'}"
	postcondition "Invoice.state := 'Paid'"
	extends uc_1_ManageInvoices onExtensionPoint uc_1_ManageInvoices.xp_ConfirmPayment
]

UseCase uc_Manage_Products "Manage Products" : EntitiesManage [
	actorInitiates a_TechnicalAdmin
	dataEntity e_Product
	actions aCreate, aRead, aUpdate, aDelete
]

UseCase uc_2_ApproveInvoices "Approve Invoices" : EntitiesBrowse [
	actorInitiates a_Manager
	dataEntity ec_Invoice
	extensionPoints xp_ApproveInvoice
]

UseCase uc_2_1_ApproveInvoice "Consult and Approve Invoice" : EntityUpdate [
	actorInitiates a_Manager
	dataEntity ec_Invoice
	precondition "Invoice.state in {'Pending'}"
	postcondition "Invoice.state = 'Approved' or 'Rejected'" 
	actions aApprove, aReject
	extends uc_2_ApproveInvoices onExtensionPoint uc_2_ApproveInvoices.xp_ApproveInvoice
]

UseCase uc_3_ReceiveAlertOfInvoicesNotYetPaid "Alert Invoices Not Paid" : EntitiesInteropSendMessage [
	actorInitiates a_Manager
	dataEntity ec_Invoice_Simple
	precondition "Invoice(s).state in {'Pending'}"
]

UseCase uc_4_ReceiveClosedInvoices  "Receive closed invoices" : EntitiesInteropSendMessage [
	actorInitiates a_ERP
	dataEntity ec_Invoice_Simple
	precondition "Invoice(s).state in {'Paid'}"
]

UseCase uc_5_ManageVATCategories "Manage VAT Categories" : EntitiesManage [
	actorInitiates a_TechnicalAdmin
	dataEntity e_VAT
	actions aCreate, aRead, aUpdate, aDelete
]

UseCase uc_6_ManageCustomers "Manage Customers" : EntitiesManage [  
	actorInitiates a_Operator 
	dataEntity ec_Customer
	actions aCreate, aRead, aUpdate, aDelete
	extensionPoints Print_Customer, Print_Customers
]

UseCase uc_6_1_PrintCustomer "Print Customer Report" : EntityReport [
	actorInitiates a_Operator
	dataEntity ec_Customer
	extends uc_6_ManageCustomers onExtensionPoint uc_6_ManageCustomers.Print_Customer
]

UseCase uc_6_2_PrintCustomers "Print Customers Report" : EntitiesReport [
	actorInitiates a_Operator
	dataEntity ec_Customer
	extends uc_6_ManageCustomers onExtensionPoint uc_6_ManageCustomers.Print_Customers
]
